<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mybatis.dao.EmployeeMapper">

<!-- 
	namespace：名称空间，指定为借口的全类名
	id：唯一标识
	resultType：返回值类型
	#{id}：从传递过来的参数中取出id值
 -->

	<select id="getEmpById" resultType="emp" databaseId="mysql">
		select * from employee where id = #{id}
	</select>
	
	<select id="getEmpByIdAndlastName" resultType="emp" databaseId="mysql">
		select * from employee
		where id = #{id} and last_name = #{lastName}
	</select>

	  
	 <!-- int insertEmp(Employee employee); -->
	 <!-- 
	 	parameterType：参数类型，可以省略  
	 	获取自增主键的值：
	 		mysql支持自增主键，自增主键值得获取，mybatis也是利用statement.getGenreatedKeys();
	 		useGeneratedKeys="true"：使用自增主键获取值策略
	 		keyProperty：指定对应的主键属性，也就是mybatis获取到主键后，将这个值封装给javaBean的哪个属性
	 -->
	 <insert id="insertEmp" parameterType="com.mybatis.entity.Employee"
	 	useGeneratedKeys="true" keyProperty="id">
	 	insert into employee(last_name,gender,email)
	 	values(#{lastName},#{gender},#{email});
	 </insert>
	 
	 <!-- boolean deleteEmpById(Integer id); -->
	 <delete id="deleteEmpById">
	 	delete from employee
	 	where id = #{id}
	 </delete>
	 
	 <!-- void updateEmpById(Employee empoyee); -->
	 <update id="updateEmpById">
	 	update employee
	 	set last_name=#{lastName},gender=#{gender},email=#{email}
	 	where id = #{id};
	 </update>
	 	
</mapper>