mybatis缓存：
	一级缓存：本地缓存，sqlSession级别的缓存，一直是开启的，
			与数据库同一次会话期间查询到的数据会放在本地缓存中，
			以后如果需要相同的数据，直接从缓存中取出；
		一级缓存失效的情况：
			1)、sqlSession不同；
			2)、sqlSession相同，查询条件不同，当前一级缓存中还没有这个数据；
			3)、sqlSession相同，两次查询之间执行了CURD操作，CURD操作有可能对这个数据有影响；
			4)、sqlSession相同，手动清除一级缓存；
	二级缓存：全局缓存，基于namespace级别的缓存，一个namespace对应一个二级缓存；
		工作机制：
			1)、一个会话查询查询一条数据，这个数据就会被放在一级缓存中；
			2)、如果会员关闭，一级缓存中的数据就会被保存到二级缓存中；
			使用方式：
				1)、开启全局二级缓存配置：<setting name="cacheEnabled" value="true"/>
				2)、在mapper.xml中配置二级缓存：使用<cache></cache>标签；
					<cache></cache>属性介绍：<cache eviction="" flushInterval="" readOnly="" size="" type=""></cache>
						①、eviction：缓存的回收策略						
							• LRU – 最近最少使用的：移除最长时间不被使用的对象；
							• FIFO – 先进先出：按对象进入缓存的顺序来移除它们；
							• SOFT – 软引用：移除基于垃圾回收器状态和软引用规则的对象；
							• WEAK - 弱引用：更积极地移除基于垃圾收集器状态和弱引用规则的对象；
							• 默认的是 LRU；
						②、flushInterval：缓存刷新间隔，缓存多长时间清空一次，默认不清空，单位毫秒；
						③、readOnly：是否只读；
							true：只读，mybatis认为所有从缓存中获取数据的操作都是只读操作，不会修改数据，
									mybatis为了加快获取速度，直接就会将数据在缓存中的引用交给用户，不安全，但是速度快；
							false：非只读，mybatis觉得获取的数据可能会被修改，mybatis会利用序列化&反序列化的技术克隆一份新的数据给你，安全，但是速度慢；
						④、size：缓存存放多少个元素；
						⑥、type：指定自定义缓存的全类名，用户如果想自定义缓存需要实现Cache接口即可；
				3)、javaBean需要实现序列化接口
			注意：
				1)、不同的namespace查出来的数据会放在自己对应的缓存中；
				2)、查询出来的数据默认先放在一级缓存中，当会话提交或者关闭后
					一级缓存中的数据才会保存到二级缓存中；
					
和缓存有关的设置/属性：
	1、cacheEnabled：
		true：开启二级缓存；
		false：关闭二级缓存，一级缓存依然可以使用；
	2、select标签中useCache：
		true：使用二级缓存；
		false：不能使用二级缓存；
	3、insert、delete、update标签中的flushCache：
		true：一级、二级缓存都会被清空，增删改执行完成后就会清空缓存；
	4、select中的flushCache：默认为false；
		true：每次查询之后都会清空缓存；
	5、sqlSession.clearCache();：只是清除当前session的一级缓存；
	6、localCacheScope：本地缓存作用域（一级缓存），
		session：当前会话的所有数据都被会保存到一级缓存中；
		STATEMENT：可以禁用一级缓存；